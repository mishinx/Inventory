<Window x:Class="Wpf_Inventarium.MainWindowEmployees"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Wpf_Inventarium"
        mc:Ignorable="d"
        Title="MainWindowEmployes" Height="470" Width="816" Closed="Window_Closed"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyleCircle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="50" x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="ToggleButtonStyleCircle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border CornerRadius="50" x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>
    <Grid>
        <Grid HorizontalAlignment="Stretch" Height="56" VerticalAlignment="Top"  Background="White" Margin="0,0,17,0" Panel.ZIndex="1">
            <Button x:Name="buttonFilter" Style="{DynamicResource ButtonStyleCircle}" Margin="0,8,10,0" VerticalAlignment="Top" Background="White" BorderThickness="0,0,0,0" Height="40" Panel.ZIndex="1" HorizontalAlignment="Right" Width="40">
                <Image x:Name="imageFilter" Source="./icons/filter.png" HorizontalAlignment="Right" VerticalAlignment="Top" Height="32" Width="32" />
            </Button>
            <Border x:Name="borderSearchLine" BorderThickness="1" BorderBrush="Black" CornerRadius="10" Margin="61,14,60,0" Panel.ZIndex="1" Height="28" VerticalAlignment="Top">
                <Grid x:Name="gridSearchLine">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Image x:Name="imageMagnifyingGlass" Source="./icons/magnifying_glass.png" Height="22" VerticalAlignment="Center" Margin="0,0,5,0" />
                    <TextBox x:Name="SearchTextBox" Background="Transparent" BorderThickness="0" Padding="5" Text="Пошук" TextWrapping="Wrap" FontSize="13" Grid.ColumnSpan="2" Margin="28,-1,0,-1" Panel.ZIndex="1" GotFocus="SearchTextBox_GotFocus" LostFocus="SearchTextBox_LostFocus" KeyDown="SearchTextBox_KeyDown" Foreground="Gray" />
                </Grid>
            </Border>
        </Grid>


        <Button x:Name="buttonAddEmployee" Style="{DynamicResource ButtonStyleCircle}" Click="AddEmployee_Click" Margin="0,0,27,40" VerticalAlignment="Bottom" Background="White" BorderThickness="0,0,0,0" Height="36" Panel.ZIndex="1" HorizontalAlignment="Right" Width="36">
            <Image x:Name="imageAddEmployee" Source="./icons/add.png" Width="36" Height="36" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" >
                    <Image.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="0.18"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Image.RenderTransform>
            </Image>
        </Button>


        <Grid x:Name="gridMenu" HorizontalAlignment="Left" Width="40" Margin="11,0,0,0" Panel.ZIndex="1" VerticalAlignment="Stretch">
            <ToggleButton x:Name="MenuToggleButton" Style="{DynamicResource ToggleButtonStyleCircle}" Background="White" Height="40" BorderThickness="0,0,0,0" Margin="0,8,0,0" VerticalAlignment="Top" BorderBrush="White" Panel.ZIndex="1" HorizontalAlignment="Center" Width="40" Checked="MenuToggleButton_Checked" >
                <Grid>
                    <Image x:Name="imageMenu" Source="./icons/menu.png" Width="32" Height="32" HorizontalAlignment="Center" VerticalAlignment="Center" Panel.ZIndex="1" />
                </Grid>
            </ToggleButton>
            <Popup x:Name="MenuPopup" PlacementTarget="{Binding ElementName=MenuToggleButton}" StaysOpen="False" Panel.ZIndex="1" Width="40" >
                <Border x:Name="borderDropDownMenu" Background="White" BorderBrush="Black" BorderThickness="1">
                    <StackPanel x:Name="StackPanelForDropDownMenu">
                        <Button x:Name="buttonHomePage" Click="buttonHomePage_Click" Background="White" BorderThickness="0,1,0,0" Panel.ZIndex="1" Margin="0,10,0,0">
                            <Image x:Name="imageHomePage" Source="./icons/homepage.png" Width="32" Height="32" />
                        </Button>
                        <Button x:Name="buttonYourProfile" Click="buttonYourProfile_Click" Background="White" BorderThickness="0" Panel.ZIndex="1">
                            <Image x:Name="imageYourProfile" Source="./icons/own_information.png" Width="32" Height="32" />
                        </Button>
                        <Button x:Name="buttonEmployes" Click="buttonEmployes_Click" Background="White" BorderThickness="0" Panel.ZIndex="1">
                            <Image x:Name="imageEmployes" Source="./icons/employee_statistics.png" Width="32" Height="32" />
                        </Button>
                        <Button x:Name="buttonSettings" Click="buttonSettings_Click" Background="White" BorderThickness="0,0,0,1" Panel.ZIndex="1" Margin="0,220,0,10" VerticalAlignment="Bottom">
                            <Image x:Name="imageSettings" Source="./icons/logout.png" Width="32" Height="32" />
                         </Button>
                    </StackPanel>
                </Border>
            </Popup>
        </Grid>


        <ScrollViewer x:Name="ScrollViewerEmployes">
            <StackPanel x:Name="PanelEmployes" Margin="0,56,0,10"/>
        </ScrollViewer>


    </Grid>
</Window>
