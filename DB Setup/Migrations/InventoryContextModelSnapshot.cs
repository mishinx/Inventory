// <auto-generated />
using Inventory_Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DB.Migrations
{
    [DbContext(typeof(InventoryContext))]
    partial class InventoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Inventory_Context.Administrator", b =>
                {
                    b.Property<int>("admin_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("admin_id"));

                    b.Property<string>("admin_password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("company_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("email_address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("admin_id");

                    b.ToTable("administrators");
                });

            modelBuilder.Entity("Inventory_Context.Goods", b =>
                {
                    b.Property<int>("goods_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("goods_id"));

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("photo")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric(10, 2)");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<string>("short_description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("subcategory")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("warehouse_id_ref")
                        .HasColumnType("integer");

                    b.HasKey("goods_id");

                    b.HasIndex("warehouse_id_ref");

                    b.ToTable("goods");
                });

            modelBuilder.Entity("Inventory_Context.Operator", b =>
                {
                    b.Property<int>("operator_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("operator_id"));

                    b.Property<int>("admin_id_ref")
                        .HasColumnType("integer");

                    b.Property<string>("email_address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("operator_password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("photo")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("warehouse_id_ref")
                        .HasColumnType("integer");

                    b.HasKey("operator_id");

                    b.HasIndex("admin_id_ref");

                    b.HasIndex("warehouse_id_ref");

                    b.ToTable("operators");
                });

            modelBuilder.Entity("Inventory_Context.Warehouse", b =>
                {
                    b.Property<int>("warehouse_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("warehouse_id"));

                    b.Property<string>("addres")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("admin_id_ref")
                        .HasColumnType("integer");

                    b.HasKey("warehouse_id");

                    b.HasIndex("admin_id_ref");

                    b.ToTable("warehouses");
                });

            modelBuilder.Entity("Inventory_Context.Goods", b =>
                {
                    b.HasOne("Inventory_Context.Warehouse", null)
                        .WithMany()
                        .HasForeignKey("warehouse_id_ref")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Inventory_Context.Operator", b =>
                {
                    b.HasOne("Inventory_Context.Administrator", null)
                        .WithMany()
                        .HasForeignKey("admin_id_ref")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Inventory_Context.Warehouse", null)
                        .WithMany()
                        .HasForeignKey("warehouse_id_ref")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Inventory_Context.Warehouse", b =>
                {
                    b.HasOne("Inventory_Context.Administrator", null)
                        .WithMany()
                        .HasForeignKey("admin_id_ref")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
